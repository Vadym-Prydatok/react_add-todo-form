{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","getUser","userId","usersFromServer","find","todosWithUsers","App","useState","newTitle","setNewTitle","userID","setUserID","newTodos","addNewTodo","isTitleError","setTitleError","isUserIDError","setUserIDError","action","method","onSubmit","e","preventDefault","trim","todoId","Math","max","createTodo","current","htmlFor","type","value","placeholder","onChange","target","users","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.274a2424.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FC } from 'react';\nimport { User } from '../../types/user';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Todo } from '../../types/todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': todo.completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  );\n};\n","import { FC } from 'react';\nimport { Todo } from '../../types/todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\n\nimport { ChangeEvent, SyntheticEvent, useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/todo';\nimport { User } from './types/user';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todosWithUsers: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [newTitle, setNewTitle] = useState('');\n  const [userID, setUserID] = useState(0);\n  const [newTodos, addNewTodo] = useState(todosWithUsers);\n  const [isTitleError, setTitleError] = useState(false);\n  const [isUserIDError, setUserIDError] = useState(false);\n\n  const handleChangeTitle = (e: ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n\n    setNewTitle(value);\n    setTitleError(false);\n  };\n\n  const handleSelectUser = (e: ChangeEvent<HTMLSelectElement>) => {\n    const { value } = e.target;\n\n    setUserID(+value);\n    setUserIDError(false);\n  };\n\n  const handleSubmit = (e: SyntheticEvent) => {\n    e.preventDefault();\n\n    if (!newTitle.trim()) {\n      setTitleError(true);\n    }\n\n    if (!userID) {\n      setUserIDError(true);\n    }\n\n    if (newTitle.trim() && userID) {\n      const todoId = Math.max(...newTodos.map(todo => todo.id)) + 1;\n      const user = getUser(userID);\n\n      const createTodo = {\n        id: todoId,\n        title: newTitle,\n        completed: false,\n        userId: userID,\n        user,\n      };\n\n      addNewTodo(current => ([...current, createTodo]));\n      setNewTitle('');\n      setUserID(0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleTodo\">\n            <input\n              name=\"title\"\n              id=\"titleTodo\"\n              type=\"text\"\n              value={newTitle}\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              onChange={handleChangeTitle}\n            />\n          </label>\n          {isTitleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userTodo\">\n            <select\n              name=\"user\"\n              id=\"userTodo\"\n              value={userID}\n              data-cy=\"userSelect\"\n              onChange={handleSelectUser}\n            >\n              <option>Choose a user</option>\n              {usersFromServer.map(users => (\n                <option\n                  key={users.id}\n                  value={users.id}\n                >\n                  {users.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {isUserIDError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={newTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}